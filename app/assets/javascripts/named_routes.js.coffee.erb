#= require rendering
#

class NamedRoute
  constructor: (attrs) ->
    _.extend this, attrs

  generate: (args...) ->
    filled_path = _.foldl _.zip(this.segment_keys, args),
                          this.fillSegmentKey,
                          this.path

    filled_path.replace "(.:format)", ""

  fillSegmentKey: (path, [key, value]) ->
    if ! _.isUndefined value
      param = value.id || value

      path.replace ":" + key, param
    else
      path

window.NamedRoutes = {
 <% Rails.application.routes.named_routes.routes.each do |_,route| %>
 <%= route.name %>:
   new NamedRoute
     name: <%= route.name.to_json %>
     path: <%= route.path.to_json %>
     segment_keys: <%= route.segment_keys.to_json %>

  <% end %>
}

helpers = {}

makeHelper = (route) ->
  helpers[route.name + "_path"] = (args...) ->
    route.generate args...

makeHelper route for route in _.values(NamedRoutes)

NamedRoutes.helpers = helpers
Rendering.helpers.named_routes = NamedRoutes.helpers

